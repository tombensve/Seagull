<?xml version="1.0" encoding="UTF-8"?>
<!--
    This provides an implementation of REST protocol.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>Seagull-REST-Protocol-Provider</artifactId>
    <version>1.0.0-BC11</version>

    <parent>
        <groupId>se.natusoft.seagull</groupId>
        <artifactId>Seagull-Providers</artifactId>
        <version>1.0.0-BC11</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>se.natusoft.seagull</groupId>
            <artifactId>Seagull-Platform</artifactId>
            <version>1.0.0-BC11</version>
        </dependency>

        <!-- I'm having serious problems making this one work!! So I'm doing this
         the original way by providing

             META-INF/services/se.natusoft.seagull.api.internal.services.SGJsonMapConverter

        <dependency>
            <groupId>com.google.auto.service</groupId>
            <artifactId>auto-service</artifactId>
            <version>1.1.1</version>
            <optional>false</optional>
        </dependency>
        -->

        <!--
            Project requires something that can read JSON and produce a Map<String, Object>
            back! This allows for wrapping this Map with Modelish models that only use
            interfaces and store data in just such a Map structure. A Modelish model
            can take this Map and wrap it with an appropriate model interface. Modelish
            models can be made immutable and can also be cloned which will create a
            complete copy having no references to the original source.

            I have never used gson before, but I have now tested it, and it produces exactly
            what is needed here!
        -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10.1</version>
        </dependency>


        <!--
        <dependency>
            <groupId>org.nanohttpd</groupId>
            <artifactId>nanohttpd</artifactId>
            <version>2.2.0</version>
        </dependency>

            https://www.mend.io/vulnerability-database/CVE-2021-28170

            The vulnerability should not be relevant in this case. This is only used to
            serve simple REST calls.
            -->
        <dependency>
            <groupId>io.thorntail</groupId>
            <artifactId>undertow</artifactId>
            <version>2.7.0.Final</version>
        </dependency>

    </dependencies>

</project>
