<?xml version="1.0" encoding="UTF-8"?>
<!--
    
    PROJECT
        Name
            Seagull-Platform-Internal
        
        Description
            Seagull - Intended to be a very simple service platform.
            
            The idea here is to define a service platform that says
            nothing about how services communicate with each other.
            This defines APIs and not to many of those, that can be
            implemented with whatever protocol. What protocol is used
            depends on what implementation you make available on
            the classpath.
        
    COPYRIGHTS
        Copyright (C) 2023 by Tommy Bengt Svensson All rights reserved.
        
    LICENSE
        Apache 2.0 (Open Source)
        
        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
        
          http://www.apache.org/licenses/LICENSE-2.0
        
        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
        
    AUTHORS
        tommy ()
            Changes:
            2023-11-12: Created!
            
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>se.natusoft.seagull</groupId>
        <artifactId>Seagull</artifactId>
        <version>1.0.0</version>
    </parent>

    <artifactId>Seagull-Platform-Internal</artifactId>
    <version>1.0.0</version>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <byte-code>11</byte-code>
    </properties>

    <dependencies>
        <!--
            This is the minimum dependency that most Seagull jars will need.
        -->
        <dependency>
            <groupId>se.natusoft.seagull</groupId>
            <artifactId>Seagull-Platform</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>${groovy-version}</version>
            <type>pom</type>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--
                A mixin from my NS-Toolbox repo that sets up what is needed to build with groovy,
                that is in addition to above "groovy-all" dependency.

                There are probably many similar setups out there, but I wanted something I have
                control over for my projects. For same reason I would not recommend anyone
                else to use mine.

                This dependency makes usu of a "mixin"
                (see https://github.com/odavid/maven-plugins/tree/master/mixin-maven-plugin).
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <version>0.1-alpha-40</version>
                <extensions>true</extensions>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>se.natusoft.tools.toolbox</groupId>
                            <artifactId>groovy-build-mixin</artifactId>
                            <version>1.0.0_G${groovy-version}-BC${byte-code}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
